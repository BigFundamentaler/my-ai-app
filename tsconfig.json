{
    "compilerOptions": {
      // 编译目标和环境配置
      "target": "es5",                              // 编译为 ES5，确保更好的浏览器兼容性
      "lib": ["dom", "dom.iterable", "esnext"],     // 包含的库：DOM API、DOM 迭代器、最新 ES 特性
      
      // JavaScript 支持和兼容性
      "allowJs": true,                              // 允许编译 JavaScript 文件
      "skipLibCheck": true,                         // 跳过声明文件的类型检查，提升编译速度
      "esModuleInterop": true,                      // 启用 ES 模块与 CommonJS 的互操作性
      "allowSyntheticDefaultImports": true,         // 允许从没有默认导出的模块中默认导入
      
      // 类型检查严格性
      "strict": true,                               // 启用所有严格的类型检查选项
      "forceConsistentCasingInFileNames": true,     // 强制文件名大小写一致性
      
      // 模块系统配置
      "module": "esnext",                           // 使用最新的 ES 模块语法
      "moduleResolution": "node",                   // 使用 Node.js 风格的模块解析
      "resolveJsonModule": true,                    // 允许导入 JSON 文件
      "isolatedModules": true,                      // 确保每个文件都可以独立编译（Babel 兼容）
      
      // 输出配置
      "noEmit": true,                               // 不生成输出文件（通常由打包工具处理）
      
      // JSX 配置
      "jsx": "react-jsx",                           // 使用 React 17+ 的新 JSX 转换（无需导入 React）
      
      // 路径解析配置
      "rootDir": ".",                               // 项目根目录
      "baseUrl": ".",                               // 模块解析的基础路径
      "paths": {                                    // 路径映射，用于简化导入路径
        "@/*": ["src/*"],                           // @/ 映射到 src/ 目录
        "@pages/*": ["src/pages/*"],               // 页面组件路径别名
        "@hooks/*": ["src/hooks/*"],               // 自定义 Hook 路径别名
        "@utils/*": ["src/utils/*"],               // 工具函数路径别名
        "@components/*": ["src/components/*"],     // 组件路径别名
        "@abis/*": ["src/abis/*"],                 // ABI 文件路径别名（智能合约相关）
        "@connections/*": ["src/connections/*"]   // 连接配置路径别名（可能是数据库或API连接）
      }
    },
  
    // 包含在编译中的文件和目录
    "include": ["src", "tests", "tailwind.config.js", "postcss.config.js"]                     // 编译 src 和 tests 目录下的所有文件
  }